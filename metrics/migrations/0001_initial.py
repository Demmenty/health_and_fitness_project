# Generated by Django 4.2.5 on 2023-12-23 13:28

import datetime

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import metrics.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Colors",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lvl1",
                    models.CharField(
                        default="#66e5a2",
                        help_text="идеально",
                        max_length=7,
                        verbose_name="Уровень 1",
                    ),
                ),
                (
                    "lvl2",
                    models.CharField(
                        default="#b2ff99",
                        help_text="хорошо",
                        max_length=7,
                        verbose_name="Уровень 2",
                    ),
                ),
                (
                    "lvl3",
                    models.CharField(
                        default="#fffa88",
                        help_text="неплохо",
                        max_length=7,
                        verbose_name="Уровень 3",
                    ),
                ),
                (
                    "lvl4",
                    models.CharField(
                        default="#ffd278",
                        help_text="плохо",
                        max_length=7,
                        verbose_name="Уровень 4",
                    ),
                ),
                (
                    "lvl5",
                    models.CharField(
                        default="#ff998b",
                        help_text="критично",
                        max_length=7,
                        verbose_name="Уровень 5",
                    ),
                ),
            ],
            options={
                "verbose_name": "Цвета измерений",
                "verbose_name_plural": "Цвета измерений",
            },
        ),
        migrations.CreateModel(
            name="PhotoAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_allowed",
                    models.BooleanField(
                        default=False, verbose_name="Доступ эксперта к фото"
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Доступ к фото",
                "verbose_name_plural": "Доступ к фото",
            },
        ),
        migrations.CreateModel(
            name="Anthropo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True, verbose_name="Дата")),
                (
                    "shoulder",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Плечо",
                    ),
                ),
                (
                    "chest",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Грудь",
                    ),
                ),
                (
                    "waist",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Талия",
                    ),
                ),
                (
                    "belly",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Живот",
                    ),
                ),
                (
                    "buttocks",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Ягодицы",
                    ),
                ),
                (
                    "hip",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Бедро",
                    ),
                ),
                (
                    "shin",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Голень",
                    ),
                ),
                (
                    "photo_1",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=metrics.models.anthropometry_photo_path,
                        verbose_name="Фото спереди",
                    ),
                ),
                (
                    "photo_2",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=metrics.models.anthropometry_photo_path,
                        verbose_name="Фото сзади",
                    ),
                ),
                (
                    "photo_3",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=metrics.models.anthropometry_photo_path,
                        verbose_name="Фото сбоку",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Антропометрия",
                "verbose_name_plural": "Антропометрия",
                "ordering": ["-date"],
                "get_latest_by": "date",
            },
        ),
        migrations.CreateModel(
            name="Levels",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "parameter",
                    models.CharField(
                        choices=[
                            ("feel", "Самочувствие"),
                            ("weight", "Вес"),
                            ("fat_percentage", "Процент жира"),
                            ("pulse", "Пульс"),
                            ("pressure_upper", "Давление верхнее"),
                            ("pressure_lower", "Давление нижнее"),
                            ("calories", "Калории"),
                            ("protein", "Белки"),
                            ("fat", "Жиры"),
                            ("carbohydrate", "Углеводы"),
                        ],
                        max_length=14,
                        verbose_name="Параметр",
                    ),
                ),
                (
                    "lvl1_min",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 1: нижняя граница"
                    ),
                ),
                (
                    "lvl1_max",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 1: верхняя граница"
                    ),
                ),
                (
                    "lvl2_min",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 2: нижняя граница"
                    ),
                ),
                (
                    "lvl2_max",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 2: верхняя граница"
                    ),
                ),
                (
                    "lvl3_min",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 3: нижняя граница"
                    ),
                ),
                (
                    "lvl3_max",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 3: верхняя граница"
                    ),
                ),
                (
                    "lvl4_min",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 4: нижняя граница"
                    ),
                ),
                (
                    "lvl4_max",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 4: верхняя граница"
                    ),
                ),
                (
                    "lvl5_min",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 5: нижняя граница"
                    ),
                ),
                (
                    "lvl5_max",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Уровень 5: верхняя граница"
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Настройки уровней измерений",
                "verbose_name_plural": "Настройки уровней измерений",
                "unique_together": {("client", "parameter")},
            },
        ),
        migrations.CreateModel(
            name="Daily",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Дата измерения"
                    ),
                ),
                (
                    "feel",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Ваше самочувствие в баллах по шкале от 1 до 10",
                        null=True,
                        verbose_name="Самочувствие",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Ваш вес в килограммах",
                        max_digits=4,
                        null=True,
                        verbose_name="Вес",
                    ),
                ),
                (
                    "fat_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Количество жировой массы в процентах от массы тела",
                        max_digits=3,
                        null=True,
                        verbose_name="Процент жира",
                    ),
                ),
                (
                    "pulse",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Среднее значение пульса в покое",
                        null=True,
                        verbose_name="Пульс",
                    ),
                ),
                (
                    "pressure_upper",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Верхнее систолическое давление",
                        null=True,
                        verbose_name="Давление верхнее",
                    ),
                ),
                (
                    "pressure_lower",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Нижнее диастолическое давление",
                        null=True,
                        verbose_name="Давление нижнее",
                    ),
                ),
                (
                    "calories",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Количество потребленных за день килокалорий",
                        null=True,
                        verbose_name="Калории",
                    ),
                ),
                (
                    "protein",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Количество потребленных за день белков в граммах",
                        max_digits=6,
                        null=True,
                        verbose_name="Белки",
                    ),
                ),
                (
                    "fat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Количество потребленных за день жиров в граммах",
                        max_digits=6,
                        null=True,
                        verbose_name="Жиры",
                    ),
                ),
                (
                    "carbohydrate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Количество потребленных за день углеводов в граммах",
                        max_digits=6,
                        null=True,
                        verbose_name="Углеводы",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="Комментарий"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Ежедневные измерения",
                "verbose_name_plural": "Ежедневные измерения",
                "ordering": ("date",),
                "get_latest_by": "date",
                "unique_together": {("client", "date")},
            },
        ),
    ]
